观察者模式：
	（主体：Subject、观察者：Observer）
定义：
	定义了对象之间的一对多依赖，这样一来，当一个对象改变状态时，它的所有依赖者都会收到通知并且自动更新
项目描述：
	气象监测应用，利用WeatherData对象取得气象站数据，并更新三个布告板：目前状况、气象统计、天气预报
	
	1：初步方式：在预留的观测值改变的方法中，获取温度、湿度和气压数据，分别调用三个布告板的更新操作；
	       问题：改变的数据并没有抽离并封装起来；针对实现变成导致以后添加和删除布告板时必须修改程序；这两个是第一章提到的两个原则
	2：观察者模式类图
	   松耦合：观察者模式提供了一种对象设计，让主体和观察者之间松耦合，改变其中一方，不会影响另一方。
	 设计原则：为了交互对象之间的松耦合设计而努力。
	3：观察者模式实现应用
		问题：观察者只能被动接收主体推送的状态，而且不一定是观察者需要的，不能让观察者主动拉取需要的状态 ，（还有就是推送时数据可以封装成对象）
	4：JAVA内置观察者模式，observer：观察者，Observable：可观察者（主体）
		补充：1：主体方法中内置 setChange方法，当只有调用该方法，才可通知观察者更新，达到有效控制更新 作用
			2：观察者可从主体中主动拉取需要的数据
		缺点：obserable是一个类不是接口，限制了使用和复用
	5：JDK中的观察者模式：Swing-JButton		添加两个监听（观察者），主体按钮改变时，两个倾听者收到改变
	